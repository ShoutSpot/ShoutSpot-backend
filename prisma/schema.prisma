// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


// To run a prisma migration -> npx prisma migrate dev --name <migration_name>
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-musl-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int   @id @default(autoincrement())
  firstname   String
  email       String   @unique
  password    String?
  googleUID   String?
  isGoogleUser Boolean
  role        String @default("user")
  spaces      Space[]
}

model Space {
  id                 Int   @id @default(autoincrement())
  spaceName          String
  logo               String?
  squareLogo         Boolean  @default(false)
  spaceHeading       String
  customMessage      String
  questions          Question[]
  collectExtraInfo   CollectExtraInfo?
  collectionType     String
  collectStarRatings Boolean  @default(false)
  language           String
  thankYouImage      String?
  thankYouTitle      String? @default("Thank you!")
  thankYouMessage    String? @default("Thank you so much for your shoutout! It means a ton for us! üôè")
  redirectPageLink   String?
  maxVideoDuration   Int      @default(30)
  maxCharsAllowed    Int      @default(128)
  videoButtonText    String  @default("Record a video")
  textButtonText     String @default("Record a text")
  consentText        String? @default("I give permission to use this testimonial")
  textSubmissionTitle String?
  questionLabel      String? @default("QUESTIONS")
  userId             Int
  user               User     @relation(fields: [userId], references: [id])
  reviews            Review[]
}

model Question {
  questionId     Int   @id @default(autoincrement())
  text    String
  id   Int
  spaceId Int
  space   Space  @relation(fields: [spaceId], references: [id])
}

model CollectExtraInfo {
  id          Int   @id @default(autoincrement())
  name       Boolean @default(true)
  email      Boolean @default(false)
  company    Boolean @default(false)
  socialLink Boolean @default(false)
  address    Boolean @default(false)
  spaceId    Int @unique
  space   Space  @relation(fields: [spaceId], references: [id])
}

model Review {
  reviewID          Int   @id @default(autoincrement())
  reviewType        String
  positiveStarsCount Int @default(5) 
  reviewText        String?
  reviewImage       String?
  reviewVideo       String?
  userDetails       Json
  isLiked           Boolean  @default(false)
  submitDateTime    DateTime @default(now())
  isSpam            Boolean @default(false)
  sentiment         String? @default("positive")
  spaceId           Int
  space             Space    @relation(fields: [spaceId], references: [id])
}